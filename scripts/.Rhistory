subset(archeaVirus, subset = (id == "ATV"))
subset(archeaVirus, position > 100)
subset(archeaVirus, position > 100)@iSubst
subset(archeaVirus, position > 100)@iSubset
trace(subset, signature = "MarkedPointProcess", edit = TRUE)
trace(subset, signature = "ContinuousProcess", edit = TRUE)
subset(archeaVirus, position > 100)
n
subset(archeaVirus, position > 100)
n
subset
n
Q
archeaVirus
save(archeaVirus, file = "/Users/nielsrichardhansen/programs/ppstat/pkg/data/archeaVirus.RData")
trace(subset, signature = "ContinuousProcess", edit = TRUE)
trace(subset, signature = "MarkedPointProcess", edit = TRUE)
subset(archeaVirus, position > 100)
subset(archeaVirus, id == "AFV9")
q()
n
library(ppstat)
data(archeaVirus)
archeaVirus
class(archeaVirus)
q()
n
library(ppstat)
data(archeaVirus)
archeaVirus
plot(subset(archeaVirus, id == "AFV9"))
subset(archeaVirus, id == "AFV9")
subset(as(archeaVirus, "ContinuousProcess"), id == "AFV9")
subset(archeaVirus, subset = id == "AFV9")
q()
n
library(ppstat)
data(archeaVirus)
plot(subset(archeaVirus, id == "AFV9"))
subset(archeaVirus, id == "AFV9")
levels(getId(subset(archeaVirus, id == "AFV9")))
levels(getPointId(subset(archeaVirus, id == "AFV9")))
getPointId(subset(archeaVirus, id == "AFV9"))
trace("[", signature= c("MarkedPointProcess", "integer", "missing"), edit = TRUE)
levels(getPointId(subset(archeaVirus, id == "AFV9")))
slotNames(archeaVirus)
archeaVirus@pointProcessEnv$pointPointer
trace("[", signature= c("MarkedPointProcess", "integer", "missing"), edit = TRUE)
levels(getPointId(subset(archeaVirus, id == "AFV9")))
getPointId(subset(archeaVirus, id == "AFV9"))
subset(archeaVirus, id == "AFV9")@pointProcessEnv$pointPointer
subset(archeaVirus, id == "AFV9")@pointProcessEnv$pointPointer$pointee
getPointId(archeaVirus)[subset(archeaVirus, id == "AFV9")@pointProcessEnv$pointPointer$pointee]
getId(archeaVirus)[subset(archeaVirus, id == "AFV9")@pointProcessEnv$pointPointer$pointee]
tmp <- subset(archeaVirus, id == "AFV9")
tmp@pointProcessEnv$pointPointer$pointee %in% processdata:::iSubset(tmp)
getPointId(tmp)[tmp@pointProcessEnv$pointPointer$pointee %in% processdata:::iSubset(tmp)]
iSubset(tmp)
processdata:::iSubset(tmp)
?unique
?duplicated
anyDuplicated(processdata:::iSubset(tmp))
getPointPointer(tmp)
processdata:::getPointPointer(tmp)
q()
n
library(ppstat)
data(archaVirus)
data(archeaVirus)
subset(archeaVirus, id == "AFV9")
getPointId(subset(archeaVirus, id == "AFV9"))
processdata:::getPointPointer(subset(archeaVirus, id == "AFV9"))
n
subset(archeaVirus, id == "AFV9")
trace("[", signature= c("MarkedPointProcess", "integer", "missing"), edit = TRUE)
subset(archeaVirus, id == "AFV9")
n
i
getPointPointer(x)
subset(archeaVirus, id == "AFV9")
n
getPointPointer(x)$pointee
iSubset(x)
getiPointSubset(x)
iPointSubset(x)
length(iPointSubset(x))
length(getPointPointer(x)$pointee)
getPointPointer(x)$pointee
dim(getPointPointer(x))
Q
dim(processdata:::getPointPointer(archeaVirus))
length(getPointId(archeaVirus))
validObject(archeaVirus)
archeaVirus@pointProcessEnv$pointPointer
getPointPoisition(archeaType)
getPointPosition(archeaType)
getPointPosition(archeaVirus)
q()
n
library(ppstat)
data(archeaVirus)
validObject(archeaVirus)
archeaPoints <- cbind(data.frame(id = getPointId(archeaVirus), position = getPointPosition(archeaVirus), markType = getMarkType(archeaVirus)), getMarkValues(archeaVirus))
archeaPoints <- cbind(data.frame(id = getPointId(archeaVirus), position = getPointPosition(archeaVirus), markType = processdata:::getMarkType(archeaVirus)), getMarkValues(archeaVirus))
archeaPoints <- cbind(data.frame(id = getPointId(archeaVirus), position = getPointPosition(archeaVirus), markType = processdata:::getMarkType(archeaVirus)), processdata:::getMarkValues(archeaVirus))
archeaPoints <- cbind(data.frame(id = getPointId(archeaVirus), position = getPointPosition(archeaVirus), markType = processdata:::getMarkType(archeaVirus)), processdata:::getMarkValue(archeaVirus))
archeaPoints
archeaPoints <- data.frame(id = getPointId(archeaVirus), position = getPointPosition(archeaVirus), markType = processdata:::getMarkType(archeaVirus))
archeaPoints
str(archeaVirus)
archeaCont <- as.data.frame(as.matrix(getValue(archeaVirus)))
archeaCont
dim(archeaCont)
archeaCont[1,]
archeaCont <- cbind(data.frame(id = getId(archeaVirus), position = getPosition(archeaVirus)), archeaCont)
archeaVirusOld <- archeaVirus
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
save(archeaCont, archeaPoints, "~/programs/archea.RData")
save(archeaCont, archeaPoints, file = "~/programs/archea.RData")
trace(markedPointProcess, signature = "data.frame", edit = TRUE)
trace(markedPointProcess, signature = c("data.frame", "data.frame"), edit = TRUE)
trace(markedPointProcess, signature = c("data.frame", "ContinuousProcess"), edit = TRUE)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
pointProcess
pointProcess
i
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
pointProcess
validObject(pointProcess)
position
id
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
ii
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
dup
pointee
length(evalPosition)
length(evalPosition[[1]])
length(evalPosition[[2]])
length(evalPosition[[3]])
conId
contId
Q
dim(archeaCont)
continuousProcess(archeaCont, positionVar = "position")
colNames(pointProcess)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
colNames(pointProcess)
contId
trace(markedPointProcess, signature = c("data.frame", "ContinuousProcess"), edit = TRUE)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
archeaVirus
subset(archeaVirus, id == "AFV9")
plot(subset(archeaVirus, id == "AFV9"))
archeaVirus@pointProcessEnv$pointPointer
?duplicated
trace(markedPointProcess, signature = c("data.frame", "ContinuousProcess"), edit = TRUE)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
length(pointee)
length(pointee)
length(dup)
dup[1:1330]
any(dup[1:1330])
which(dup[1:1330])
length(which(dup[1:1330]))
position
length(position)
evalPosition$pointer[ord][1:1000]
length(which(dup))
which(dup)
Q
trace(markedPointProcess, signature = c("data.frame", "ContinuousProcess"), edit = TRUE)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
length(position)
length(evalPosition)
length(evalPosition[,1])
length(evalPosition[,2])
length(evalPosition[,3])
length(dup)
which(dup)
which(evalPosition$pointer < Inf)
length(which(evalPosition$pointer < Inf))
Q
q()
n
load("/Users/nielsrichardhansen/programs/archea.RData")
library(ppstat)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
trace(markedPointProcess, signature = c("data.frame", "ContinuousProcess"), edit = TRUE)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
length(pointee)
dim(evalPosition)
tt <- split(evalPosition, evalPosition$id)
dim(tt)
length(tt)
sapply(tt,dim)
names(tt)
Q
q()
n
library(processdata)
load("/Users/nielsrichardhansen/programs/archea.RData")
ls()
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
length(dup)
length(dup[[1]])
length(!dup[[1]])
Q
q()
n
load("/Users/nielsrichardhansen/programs/archea.RData")
library(processdata)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
length(ii)
Q
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
ii
ii
length(contPosition)
contPosition[[1]]$pointer[1]
contPosition[[1]]$pointer[2]
contPosition[[1]]$pointer[3]
names(evalPosition)
Q
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
names(evalPosition)
names(dup)
names(evalPosition)
Q
q()
n
library(processdata)
load("/Users/nielsrichardhansen/programs/archea.RData")
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
ii
names(evalPosition)
names(ord)
Q
?lapply
q()
n
library(processdata)
load("/Users/nielsrichardhansen/programs/archea.RData")
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
ii
names(evalPosition)
Q
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
names(evalPosition)
length(evalPosition)
evalPosition
Q
q()
n
load("/Users/nielsrichardhansen/programs/archea.RData")
library(processdata)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
names(evalPosition)
ii
Q
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
evalPosition[[1]][1,]
ord
length(ord)
Q
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
dup[[1]][1,]
dup[[1]][1]
evalPosition[[1]][1,]
ord[[i]][1]
ord[[1]][1]
ord[[2]][1]
ord[[3]][1]
evalPosition[[1]][1,]
evalPosition[[1]][2,]
evalPosition[[1]][3,]
evalPosition[[1]][100,]
evalPosition[[1]][1000,]
Q
q()
n
load("/Users/nielsrichardhansen/programs/archea.RData")
library(processdata)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
ord[[1]][1
]
ord[[2]][1]
Q
q()
n
load("/Users/nielsrichardhansen/programs/archea.RData")
library(processdata)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
n
ord[[1]][1]
ord[[1]][2]
ord[[1]][3]
ord[[2]][3]
ii
length(pointee)
pointPosition
duplicated(pointPosition)
which(duplicated(pointPosition))
length(which(duplicated(pointPosition)))
length(pointPosition)
length(pointPosition) - 48
lapply(split(pointPosition, pointId), duplicated)
sapply(lapply(split(pointPosition, pointId), duplicated),sum)
sum(sapply(lapply(split(pointPosition, pointId), duplicated),sum))
1330-34
archeaVirus
plot(archeaVirus)
plot(subset(archeaVirus, select = -PlusStrand:MinusStrand)
)
subset(archeaVirus, select = -PlusStrand:MinusStrand)
subset(archeaVirus, select = nMinus:GeneStartPlus)
plot(subset(archeaVirus, select = nMinus:GeneStartPlus))
q()
n
load("/Users/nielsrichardhansen/programs/archea.RData")
library(processdata)
archeaVirus <- markedPointProcess(archeaPoints, archeaCont, positionVar = "position")
archeaVirus
subset(archeaVirus, id == "AFV9")
getPointId(subset(archeaVirus, id == "AFV9"))
processdata:::getPointPointer(subset(archeaVirus, id == "AFV9"))
processdata:::getPointPointer(archeaVirus)
plot(subset(archeaVirus, id = "AFV9"))
plot(subset(archeaVirus, id == "AFV9"))
?markedPointProcess
MPP
dim(MPP)
dim(MPP)[1]
trace("markedPointProcess")
     markedPointProcess(MPP)
untrace(markedPointProcess)
trace("markedPointProcess", edit = TRUE)
trace("markedPointProcess", signature = c("data.frame", "ContinuousProcess"), edit = TRUE)
     markedPointProcess(MPP)
n
pointData
dim(pointData)
position
dim(pointData)
dim(pointData)[1]
pointData
Q
archeaVirus
save(archeaVirus, file = "/Users/nielsrichardhansen/programs/ppstat/pkg/data/archeaVirus.RData")
q()
n
library(ppstat)
demo(examples)
demo(archea)
demo(archeaVirus)
q()
n
library(ppstat)
demo(archea)
demo(archeaVirus)
computeMinusLogLikelihood(archeaPPM)
processData(archeaPPM)
getModelMatrix(archeaPPM)
image(getModelMatrix(archeaPPM), aspect = "fill")
getPointPosition(processData(archeaPPM))
computeLinearPredictor(archeaPPM)
archeaPPM@par
archeaPPM@coefficients
q()
n
library(ppstat)
computeMinusLogLikelihood(archeaPPM)
q()
n
library(ppstat)
demo(archeaVirus)
computeMinusLoglikelihood(archeaPPM)
computeMinusloglikelihood(archeaPPM)
computeMinusLogLikelihood(archeaPPM)
model <- archeaPPM
all.vars(model@formula, unique = FALSE)[attr(terms(model@formula), "response")]
                sum(eta[getPointPosition(processData(model)[ , "nPlus"])]) 
            eta <- computeLinearPredictor(model, coefficients, ...)

            eta <- computeLinearPredictor(model, NULL)
                sum(eta[getPointPosition(processData(model)[ , "nPlus"])]) 
eta[getPointPosition(processData(model)[ , "nPlus"])]
getPointPosition(processData(model)[ , "nPlus"])
length(eta)
processdata:::getPointPointer(archeaVirus)
getPosition(archeaVirus)[processdata:::getPointPointer(archeaVirus)$pointee]
length(getPosition(archeaVirus)[processdata:::getPointPointer(archeaVirus)$pointee])
getPosition(archeaVirus)[processdata:::getPointPointer(archeaVirus)$pointee] == getPointPosition(archeaVirus)
all(getPosition(archeaVirus)[processdata:::getPointPointer(archeaVirus)$pointee] == getPointPosition(archeaVirus))
all(getPosition(archeaVirusSIRV1)[processdata:::getPointPointer(archeaVirusSIRV1)$pointee] == getPointPosition(archeaVirusSIRV1))
length(eta)
dim(getModelMatrix(model))
length(getPosition(model))
length(getPosition(processData(model))
)
getPointPointer(archeaVirusSIRV1)$pointee
processdata:::getPointPointer(archeaVirusSIRV1)$pointee
processdata:::getPointPointer(archeaVirusSIRV1[, "pPlus"])$pointee
getPointPosition(archeaVirusSIRV1)
processdata:::getPointPointer(archeaVirusSIRV1[, "pPlus"])
q()
n
library(ppstat)
demo(archeaVirus)
q()
n
library(ppstat)
demo(archeaVirus)
data(toyExample)
data(toyData)
toyData
toyData@markedPointProcess$id
toyData@markedPointProcess@id
pointId <- toyData@markedPointProcess@id
pointPosition <- toyData@markedPointProcess@position
marks <- toyData@markedPointProcess@markType
toyData@markedPointProcess@value
toyData@markedPointProcess@markValue
str(toyData@markedPointProcess)
toyPoins <- data.frame(id = pointId, time = pointPosition, markType = marks)
toyPoinys <- data.frame(id = pointId, time = pointPosition, markType = marks)
toyPoints <- data.frame(id = pointId, time = pointPosition, markType = marks)
toyData@continuousProcess@value
dim(toyData@continuousProcess@value)
contId <- toyData@continuousProcess@id
ls()
contPosition <- toyData@continuousProcess@position
toyCont <- data.frame(id = contId, time = contPosition)
toyData <- markedPointProcess(toyPoint, toyCont)
toyData <- markedPointProcess(toyPoints, toyCont)
toyPoints
toyPoints$id
toyCont$id
toyData <- markedPointProcess(toyPoints, toyCont)
continuousProcess(toyCont)
toyData <- markedPointProcess(toyPoints, continuousProcess(toyCont))
getUnitData(continuousProcess(toyCont))
processdata:::getUnitData(continuousProcess(toyCont))
rownames(processdata:::getUnitData(continuousProcess(toyCont)))
trace("markedPointProcess", signature=c("data.frame", "data.frame"), edit =TRUE)
trace("markedPointProcess", signature=c("data.frame", "ContinuousProcess"), edit =TRUE)
toyData <- markedPointProcess(toyPoints, continuousProcess(toyCont))
n
processdata:::getUnitData(pointProcess)
rownames(processdata:::getUnitData(pointProcess))
length(rownames(processdata:::getUnitData(pointProcess)))
getId(pointProcess)
levels(getId(pointProcess))
?factor
factor(c(1,10))
sort(factor(c(1,10)))
split(c(1,2),factor(c(1,10)))
unlist(split(c(1,2),factor(c(1,10))), use.names = TRUE)
toyData <- markedPointProcess(toyPoints, continuousProcess(toyCont))
n
contId
getId(pointProcess)
ii
names(evalPosition)
q
Q
trace("markedPointProcess", signature=c("data.frame", "ContinuousProcess"), edit =TRUE)
toyData <- markedPointProcess(toyPoints, continuousProcess(toyCont))
n
names(evalPosition)
Q
trace("markedPointProcess", signature=c("data.frame", "ContinuousProcess"), edit =TRUE)
toyData <- markedPointProcess(toyPoints, continuousProcess(toyCont))
toyData
plot(toyData)
save(toyData, file = "/Users/nielsrichardhansen/programs/ppstat/pkg/data/toyData.RData")
q()
n
